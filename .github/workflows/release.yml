name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]
        exclude:
          - os: windows
            arch: arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.0'

      - name: Build
        run: |
          mkdir -p bin
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o bin/securitydns-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }} ./cmd/main.go

      - name: Create .deb Package (Debian/Ubuntu)
        if: matrix.os == 'linux'
        run: |
          VERSION=${{ github.ref_name }}  # Extract tag name (v1.0.2)
          VERSION=${VERSION#v}  # Remove "v" prefix if present
          mkdir -p package/DEBIAN
          echo "Package: securitydns" > package/DEBIAN/control
          echo "Version: $VERSION" >> package/DEBIAN/control
          echo "Section: utils" >> package/DEBIAN/control
          echo "Priority: optional" >> package/DEBIAN/control
          echo "Architecture: ${{ matrix.arch }}" >> package/DEBIAN/control
          echo "Depends: libc6" >> package/DEBIAN/control
          echo "Maintainer: Stepan Kutaj <stepan.kutaj@tldr-it.com>" >> package/DEBIAN/control
          echo "Description: DNS Security Utils package" >> package/DEBIAN/control
          mkdir -p package/usr/local/bin
          cp bin/securitydns-linux-${{ matrix.arch }} package/usr/local/bin/securitydns
          chmod 755 package/usr/local/bin/securitydns
          dpkg-deb --build package securitydns-${{ matrix.arch }}.deb

      - name: Create .rpm Package (RHEL/CentOS)
        if: matrix.os == 'linux'
        run: |
          VERSION=${{ github.ref_name }}  # Extract tag name (v1.0.2)
          VERSION=${VERSION#v}  # Remove "v" prefix if present
          # Convert Go arch to RPM-compatible arch
          RPM_ARCH=${{ matrix.arch }}
          if [[ "$RPM_ARCH" == "amd64" ]]; then
            RPM_ARCH="x86_64"
          fi
          if [[ "$RPM_ARCH" == "arm64" ]]; then
            RPM_ARCH="aarch64"
          fi

          mkdir -p rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
          cat <<EOF > rpmbuild/SPECS/securitydns.spec
          Name: securitydns
          Version: $VERSION
          Release: 1%{?dist}
          Summary: DNS Security Utils package
          License: MIT
          Group: Utilities/System
          Source: securitydns.tar.gz
          BuildArch: $RPM_ARCH
          Requires: glibc
          
          %description
          A simple DNS Security Utils package.

          %prep
          %setup -q

          %build

          %install
          mkdir -p %{buildroot}/usr/local/bin
          install -m 755 bin/securitydns-linux-$RPM_ARCH %{buildroot}/usr/local/bin/securitydns

          %files
          /usr/local/bin/securitydns

          %changelog
          * $(date +'%a %b %d %Y') Stepan Kutaj <stepan.kutaj@tldr-it.com> - $VERSION-1
          - Initial release
          EOF

          tar czf rpmbuild/SOURCES/securitydns.tar.gz bin/securitydns-linux-$RPM_ARCH
          rpmbuild -bb --define "_topdir $(pwd)/rpmbuild" rpmbuild/SPECS/securitydns.spec
          mv rpmbuild/RPMS/$RPM_ARCH/securitydns-$VERSION-1.$RPM_ARCH.rpm securitydns-$RPM_ARCH.rpm

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        run: |
          # Convert Go arch to RPM-compatible arch
          RPM_ARCH=${{ matrix.arch }}
          if [[ "$RPM_ARCH" == "amd64" ]]; then
            RPM_ARCH="x86_64"
          fi
          if [[ "$RPM_ARCH" == "arm64" ]]; then
            RPM_ARCH="aarch64"
          fi

          # Create a directory for the artifacts
          mkdir -p artifacts
          mv bin/securitydns-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }} artifacts/
          mv securitydns-${{ matrix.arch }}.deb artifacts/
          mv securitydns-$RPM_ARCH.rpm artifacts/

        with:
          path: ''
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: securitydns-${{ matrix.os }}-${{ matrix.arch }}
          path: artifacts/*

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write  # This permission is needed to create releases
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: bin/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}